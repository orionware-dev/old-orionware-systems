<?xml version="1.0" encoding="UTF-8"?>
<Server port="8005" shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
    <!--<Listener className="org.apache.catalina.security.SecurityListener" />-->
    <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />


    <GlobalNamingResources>
        <!--Editable user database that can also be used by UserDatabaseRealm to authenticate users-->
        <Resource name="UserDatabase" auth="Container" type="org.apache.catalina.UserDatabase"
            description="User database that can be updated and saved"
            factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
            pathname="conf/tomcat-users.xml" />
    </GlobalNamingResources>


    <!--A "Service" is a collection of one or more "Connectors" that share a single "Container"-->
    <Service name="Catalina">
        <!--The connectors can use a shared executor, you can define one or more named thread pools-->
        <Executor name="tomcatThreadPool" namePrefix="catalina-exec-" maxThreads="200" minSpareThreads="25"/>
        
        
        <Connector port="8080" protocol="HTTP/1.1" executor="tomcatThreadPool" connectionUploadTimeout="300000"
            connectionTimeout="20000" maxHttpHeaderSize="500000" maxPostSize="-1"
            enableLookups="false" acceptCount="50" acceptorThreadCount="5"
            disableUploadTimeout="false" compression="on" maxConnections="10000"
            compressionMinSize="2048" noCompressionUserAgents="gozilla, traviata"
            compressableMimeType="text/html,text/xml,text/plain,image/svg+xml" />
            
        <Connector port="8443" protocol="org.apache.coyote.http11.Http11AprProtocol" maxThreads="100" scheme="https"
            secure="true" SSLEnabled="true"
            <!--keystoreFile="(keystore_path)" keystorePass="(keystore_password)"-->
            SSLVerifyClient="false" sslEnabledProtocols="TLSv1, TLSv1.1 TLSv1.2"
            enableLookups="false" acceptCount="50" acceptorThreadCount="5"
            connectionUploadTimeout="300000" disableUploadTimeout="false" compression="on" maxConnections="10000"
            compressionMinSize="2048" noCompressionUserAgents="gozilla, traviata"
            compressableMimeType="text/html,text/xml,text/plain,image/svg+xml"
            maxHttpHeaderSize="500000" maxPostSize="-1">
            
            <SSLHostConfig>
                <Certificate certificateKeystoreFile="conf/localhost-rsa.jks" type="RSA"/>
            </SSLHostConfig>
        </Connector>


        <!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443 with HTTP/2 This connector uses the APR/native implementation.
        When using the APR/native implementation 
            or the OpenSSL engine with NIO or NIO2 then the OpenSSL configuration attributes must be used. -->
        <!-- <Connector port="8443" protocol="org.apache.coyote.http11.Http11AprProtocol" maxThreads="150" SSLEnabled="true" >
        <UpgradeProtocol className="org.apache.coyote.http2.Http2Protocol" 
            /> <SSLHostConfig> <Certificate certificateKeyFile="conf/localhost-rsa-key.pem" certificateFile="conf/localhost-rsa-cert.pem"
            certificateChainFile="conf/localhost-rsa-chain.pem" 
            type="RSA" /> </SSLHostConfig> </Connector> -->

        <!-- Define an AJP 1.3 Connector on port 8009 -->
        <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />


        <!-- An Engine represents the entry point (within Catalina) that processes every request.
        The Engine implementation for Tomcat stand alone analyzes the HTTP 
            headers included with the request, and passes them on to the appropriate Host (virtual host).
            Documentation at /docs/config/engine.html -->

        <!-- You should set jvmRoute to support load-balancing via AJP ie :
        <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1"> -->
        <Engine name="Catalina" defaultHost="localhost">

            <!--For clustering, please take a look at documentation at: /docs/cluster-howto.html
            (simple how to) /docs/config/cluster.html (reference documentation) -->
            <!-- <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/> -->

            <!-- Use the LockOutRealm to prevent attempts to guess user passwords via a brute-force attack -->
            <Realm className="org.apache.catalina.realm.LockOutRealm">
                <!-- This Realm uses the UserDatabase configured in the global JNDI resources under the key "UserDatabase".
                Any edits that are performed against 
                    this UserDatabase are immediately available for use by the Realm. -->
                <Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase" />
            </Realm>

            <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">

                <!-- SingleSignOn valve, share authentication between web applications Documentation at: /docs/config/valve.html -->
                <!-- <Valve className="org.apache.catalina.authenticator.SingleSignOn" /> -->

                <!-- Access log processes all example. Documentation at: /docs/config/valve.html Note:
                The pattern used is equivalent to using pattern="common" -->
                <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
                prefix="localhost_access_log" suffix=".txt"
                    pattern="%h %l %u %t &quot;%r&quot; %s %b" />
            </Host>
        </Engine>
    </Service>
</Server>